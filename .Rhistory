dplyr::select(name = NAME)
found_today <- ne_countries(returnclass = "sf", scale = "medium") %>%
filter(grepl("Mariana|Palau|Marshall|Nauru|Samoa|Solomon|Micronesia", admin))%>%
filter(admin != "American Samoa")%>%
st_transform(4326)
colonies <- colonies %>%
bind_rows(found_today %>%
dplyr::select(name = admin))
st_read("input/tianjin.geojson")
data <- read_csv("input/colonies_details.csv")
View(data)
st_read("input/tianjin.geojson") %>%
mutate(name = "Tianjin")
shape <- st_read("input/tianjin.geojson") %>%
mutate(name = "Tianjin")
ggplot(shape)+geom_sf()
ggplot(shape[2])+geom_sf()
View(data)
shape <- st_read("input/tianjin.geojson") %>%
mutate(name = c("Jiaozhou Bay", "Tianjin"))
View(shape)
colonies <- colonies %>%
bind_rows(shape %>%
filter(name == "Tianjin"))
shape <- shape %>%
filter(name == "Jiaozhou Bay")%>%
st_intersection(countries)
shape <- shape %>%
filter(name == "Jiaozhou Bay")%>%
st_intersection(countries %>% st_make_valid())
ggplot(shape)+
geom_sf()
View(shape)
colonies <- colonies %>%
bind_rows(shape %>%
dplyr::select(-name_long))
View(colonies)
missing <- data %>%
anti_join(
colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))
)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)%>%
st_make_valid()
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
crs(colonies)
st_crs(colonies)
st_crs(shape)
library(needs)
needs(tidyverse,
sf,
ggplot2,
rnaturalearth,
osmdata)
data <- read_csv("input/colonies_details.csv")
countries <- ne_countries(returnclass = "sf", scale = "medium") %>%
dplyr::select(name_long)
fn <- "current_borders.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(countries, fn)
# borders_1900 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1900.geojson")
borders_1914 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1914.geojson")
## 1914
found_1914 <- borders_1914 %>%
filter(grepl("Togoland|German.*Africa|Kamerun", NAME))%>%
st_transform(4326)
colonies <- found_1914 %>%
dplyr::select(name = NAME)
found_today <- ne_countries(returnclass = "sf", scale = "medium") %>%
filter(grepl("Mariana|Palau|Marshall|Nauru|Samoa|Solomon|Micronesia", admin))%>%
filter(admin != "American Samoa")%>%
st_transform(4326)
colonies <- colonies %>%
bind_rows(found_today %>%
dplyr::select(name = admin))
shape <- st_read("input/tianjin.geojson") %>%
mutate(name = c("Jiaozhou Bay", "Tianjin"))
colonies <- colonies %>%
bind_rows(shape %>%
filter(name == "Tianjin"))
missing <- data %>%
anti_join(
colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))
)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)%>%
st_make_valid()
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
library(needs)
needs(tidyverse,
sf,
ggplot2,
rnaturalearth,
osmdata)
data <- read_csv("input/colonies_details.csv")
countries <- ne_countries(returnclass = "sf", scale = "medium") %>%
dplyr::select(name_long)
fn <- "current_borders.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(countries, fn)
# borders_1900 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1900.geojson")
borders_1914 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1914.geojson")
# borders_1700 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1700.geojson")
## 1914
found_1914 <- borders_1914 %>%
filter(grepl("Togoland|German.*Africa|Kamerun", NAME))%>%
st_transform(4326)
colonies <- found_1914 %>%
dplyr::select(name = NAME)
found_today <- ne_countries(returnclass = "sf", scale = "medium") %>%
filter(grepl("Mariana|Palau|Marshall|Nauru|Samoa|Solomon|Micronesia", admin))%>%
filter(admin != "American Samoa")%>%
st_transform(4326)
## Samoa is what used to be Western Samoa (German colony), American Samoa was colonized by US
## Mariana Islands are Northern Mariana Islands (German colony), Southern islands are Guam (US colony)
colonies <- colonies %>%
bind_rows(found_today %>%
dplyr::select(name = admin))
# ## to do (manually drawn shapes with geojson.io)
# ## German concession in Tianjin
# https://en.wikipedia.org/wiki/Foreign_concessions_in_Tianjin
shape <- st_read("input/tianjin_rewound.geojson") %>%
mutate(name = c("Jiaozhou Bay", "Tianjin"))
colonies <- colonies %>%
bind_rows(shape %>%
filter(name == "Tianjin"))
# shape <- shape %>%
#   filter(name == "Jiaozhou Bay")%>%
#   st_intersection(countries %>% st_make_valid())
#
# colonies <- colonies %>%
#   bind_rows(shape %>%
#               dplyr::select(-name_long))
## Jiaozhou Bay
# https://en.wikipedia.org/wiki/Kiautschou_Bay_Leased_Territory
## Wituland
# https://en.wikipedia.org/wiki/Wituland
## Kaiser Wilhelmsland
# https://de.wikipedia.org/wiki/Kaiser-Wilhelms-Land
## welserland
# https://de.wikipedia.org/wiki/Klein-Venedig_(Venezuela)
## open street map - makes problems
# ## brandenburg gold coast - makes problems
#
# osmquery <- opq_osm_id(c(240909315,216464672), type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#               mutate(name = "Brandenburg Gold Coast")%>%
#               group_by(name)%>%
#               summarize(geometry = st_union(geometry))%>%
#               st_transform(4326))
# ## st thomas - makes problems
#
# osmquery <- opq_osm_id(2754159, type = "relation")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_multipolygons %>%
#               mutate(name = "St. Thomas")%>%
#               dplyr::select(name))
# ## arguin - makes problems
#
# osmquery <- opq_osm_id(4109731, type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#     mutate(name = "Arguin")%>%
#       dplyr::select(name))
# ## bismarck archipelago - makes problems
#
# osmquery <- opq_osm_id(c(3777382, 3777383, 3777381, 3777384, 311780, 311779, 311778), type = "relation")%>%
#   osmdata_sf()
#
# provinces <- osmquery$osm_multipolygons %>%
#   summarize(geometry = st_union(geometry))
#
# result <- st_intersection(provinces, countries %>% filter(name_long == "Papua New Guinea")) %>%
#   st_cast("POLYGON")%>%
#   mutate(area = st_area(geometry))%>%
#   ## biggest area is main island, not part of archipelago
#   filter(area != max(area))%>%
#   summarize(geometry = st_union(geometry))%>%
#   mutate(name = "Bismarck Archipelago")
#
# colonies <- colonies %>%
#   bind_rows(result)
## finalize / add info
missing <- data %>%
anti_join(
colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))
)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)%>%
st_make_valid()
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
library(needs)
needs(tidyverse,
sf,
ggplot2,
rnaturalearth,
osmdata)
data <- read_csv("input/colonies_details.csv")
countries <- ne_countries(returnclass = "sf", scale = "medium") %>%
dplyr::select(name_long)
fn <- "current_borders.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(countries, fn)
# borders_1900 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1900.geojson")
borders_1914 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1914.geojson")
# borders_1700 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1700.geojson")
## 1914
found_1914 <- borders_1914 %>%
filter(grepl("Togoland|German.*Africa|Kamerun", NAME))%>%
st_transform(4326)
colonies <- found_1914 %>%
dplyr::select(name = NAME)
found_today <- ne_countries(returnclass = "sf", scale = "medium") %>%
filter(grepl("Mariana|Palau|Marshall|Nauru|Samoa|Solomon|Micronesia", admin))%>%
filter(admin != "American Samoa")%>%
st_transform(4326)
## Samoa is what used to be Western Samoa (German colony), American Samoa was colonized by US
## Mariana Islands are Northern Mariana Islands (German colony), Southern islands are Guam (US colony)
colonies <- colonies %>%
bind_rows(found_today %>%
dplyr::select(name = admin))
# ## to do (manually drawn shapes with geojson.io)
# ## German concession in Tianjin
# https://en.wikipedia.org/wiki/Foreign_concessions_in_Tianjin
## using https://observablehq.com/@bumbeishvili/rewind-geojson
shape <- st_read("input/tianjin.geojson") %>%
mutate(name = c("Jiaozhou Bay", "Tianjin"))
colonies <- colonies %>%
bind_rows(shape %>%
filter(name == "Tianjin"))
# shape <- shape %>%
#   filter(name == "Jiaozhou Bay")%>%
#   st_intersection(countries %>% st_make_valid())
#
# colonies <- colonies %>%
#   bind_rows(shape %>%
#               dplyr::select(-name_long))
## Jiaozhou Bay
# https://en.wikipedia.org/wiki/Kiautschou_Bay_Leased_Territory
## Wituland
# https://en.wikipedia.org/wiki/Wituland
## Kaiser Wilhelmsland
# https://de.wikipedia.org/wiki/Kaiser-Wilhelms-Land
## welserland
# https://de.wikipedia.org/wiki/Klein-Venedig_(Venezuela)
## open street map - makes problems
# ## brandenburg gold coast - makes problems
#
# osmquery <- opq_osm_id(c(240909315,216464672), type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#               mutate(name = "Brandenburg Gold Coast")%>%
#               group_by(name)%>%
#               summarize(geometry = st_union(geometry))%>%
#               st_transform(4326))
# ## st thomas - makes problems
#
# osmquery <- opq_osm_id(2754159, type = "relation")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_multipolygons %>%
#               mutate(name = "St. Thomas")%>%
#               dplyr::select(name))
# ## arguin - makes problems
#
# osmquery <- opq_osm_id(4109731, type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#     mutate(name = "Arguin")%>%
#       dplyr::select(name))
# ## bismarck archipelago - makes problems
#
# osmquery <- opq_osm_id(c(3777382, 3777383, 3777381, 3777384, 311780, 311779, 311778), type = "relation")%>%
#   osmdata_sf()
#
# provinces <- osmquery$osm_multipolygons %>%
#   summarize(geometry = st_union(geometry))
#
# result <- st_intersection(provinces, countries %>% filter(name_long == "Papua New Guinea")) %>%
#   st_cast("POLYGON")%>%
#   mutate(area = st_area(geometry))%>%
#   ## biggest area is main island, not part of archipelago
#   filter(area != max(area))%>%
#   summarize(geometry = st_union(geometry))%>%
#   mutate(name = "Bismarck Archipelago")
#
# colonies <- colonies %>%
#   bind_rows(result)
## finalize / add info
missing <- data %>%
anti_join(
colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))
)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)%>%
st_make_valid()
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
View(colonies)
View(colonies)
library(needs)
needs(tidyverse,
sf,
ggplot2,
rnaturalearth,
osmdata)
data <- read_csv("input/colonies_details.csv")
countries <- ne_countries(returnclass = "sf", scale = "medium") %>%
dplyr::select(name_long)
fn <- "current_borders.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(countries, fn)
# borders_1900 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1900.geojson")
borders_1914 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1914.geojson")
# borders_1700 <- st_read("https://raw.githubusercontent.com/aourednik/historical-basemaps/master/geojson/world_1700.geojson")
## 1914
found_1914 <- borders_1914 %>%
filter(grepl("Togoland|German.*Africa|Kamerun", NAME))%>%
st_transform(4326)
colonies <- found_1914 %>%
dplyr::select(name = NAME)
found_today <- ne_countries(returnclass = "sf", scale = "medium") %>%
filter(grepl("Mariana|Palau|Marshall|Nauru|Samoa|Solomon|Micronesia", admin))%>%
filter(admin != "American Samoa")%>%
st_transform(4326)
## Samoa is what used to be Western Samoa (German colony), American Samoa was colonized by US
## Mariana Islands are Northern Mariana Islands (German colony), Southern islands are Guam (US colony)
colonies <- colonies %>%
bind_rows(found_today %>%
dplyr::select(name = admin))
# ## to do (manually drawn shapes with geojson.io)
# ## German concession in Tianjin
# https://en.wikipedia.org/wiki/Foreign_concessions_in_Tianjin
## using https://observablehq.com/@bumbeishvili/rewind-geojson
shape <- st_read("input/tianjin.geojson") %>%
mutate(name = c("Jiaozhou Bay", "Tianjin"))
colonies <- colonies %>%
bind_rows(shape %>%
filter(name == "Tianjin"))
shape <- shape %>%
filter(name == "Jiaozhou Bay")%>%
st_intersection(countries %>% st_make_valid())
colonies <- colonies %>%
bind_rows(shape %>%
dplyr::select(-name_long))
## Jiaozhou Bay
# https://en.wikipedia.org/wiki/Kiautschou_Bay_Leased_Territory
## Wituland
# https://en.wikipedia.org/wiki/Wituland
## Kaiser Wilhelmsland
# https://de.wikipedia.org/wiki/Kaiser-Wilhelms-Land
## welserland
# https://de.wikipedia.org/wiki/Klein-Venedig_(Venezuela)
## open street map - makes problems
# ## brandenburg gold coast - makes problems
#
# osmquery <- opq_osm_id(c(240909315,216464672), type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#               mutate(name = "Brandenburg Gold Coast")%>%
#               group_by(name)%>%
#               summarize(geometry = st_union(geometry))%>%
#               st_transform(4326))
# ## st thomas - makes problems
#
# osmquery <- opq_osm_id(2754159, type = "relation")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_multipolygons %>%
#               mutate(name = "St. Thomas")%>%
#               dplyr::select(name))
# ## arguin - makes problems
#
# osmquery <- opq_osm_id(4109731, type = "way")%>%
#   osmdata_sf()
#
# colonies <- colonies %>%
#   bind_rows(osmquery$osm_polygons %>%
#     mutate(name = "Arguin")%>%
#       dplyr::select(name))
# ## bismarck archipelago - makes problems
#
# osmquery <- opq_osm_id(c(3777382, 3777383, 3777381, 3777384, 311780, 311779, 311778), type = "relation")%>%
#   osmdata_sf()
#
# provinces <- osmquery$osm_multipolygons %>%
#   summarize(geometry = st_union(geometry))
#
# result <- st_intersection(provinces, countries %>% filter(name_long == "Papua New Guinea")) %>%
#   st_cast("POLYGON")%>%
#   mutate(area = st_area(geometry))%>%
#   ## biggest area is main island, not part of archipelago
#   filter(area != max(area))%>%
#   summarize(geometry = st_union(geometry))%>%
#   mutate(name = "Bismarck Archipelago")
#
# colonies <- colonies %>%
#   bind_rows(result)
## finalize / add info
missing <- data %>%
anti_join(
colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))
)
final <- colonies %>%
mutate(name = str_replace_all(name,
c("German E\\. Africa \\(Tanganyika\\)" = "German East Africa",
"Northern Mariana Islands" = "Mariana Islands",
"Federated States of Micronesia" = "Caroline Islands",
"Solomon Islands" = "North Solomon Islands")))%>%
left_join(data)%>%
st_make_valid()
fn <-  "test_colonies.geojson"
if(file.exists(fn)){
file.remove(fn)
}
write_sf(final, fn)
View(colonies)
